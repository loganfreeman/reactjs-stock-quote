{"version":3,"sources":["services/request.ts","services/stock.ts","components/Search.tsx","utils/stringUtils.ts","components/Stock.tsx","components/Chart.tsx","components/StepSeries.tsx","components/LineSeries.tsx","components/Compare.tsx","App.tsx","utils/normalize.ts","reportWebVitals.ts","ErrorBoundary.tsx","index.tsx"],"names":["ResponseError","response","Error","queryString","data","Object","keys","filter","key","undefined","map","encodeURIComponent","join","checkStatus","status","error","statusText","message","get","url","headers","Headers","append","path","console","log","request","method","options","a","fetch","text","JSON","parse","STOCK_QUERY_URL","API_KEY","symbol","function","keywords","apikey","searchSymbol","StockService","SearchStock","onChange","React","useState","open","setOpen","setOptions","searchValue","setSearchValue","loading","length","throttled","throttle","active","bestMatches","useEffect","match","Autocomplete","multiple","id","style","width","onOpen","onClose","e","v","getOptionSelected","option","value","getOptionLabel","renderInput","params","TextField","variant","target","InputProps","endAdornment","Fragment","CircularProgress","color","size","daily","stock","history","useHistory","last","setLast","meta","timeSeriesDaily","Card","CardHeader","title","subheader","name","CardContent","Grid","container","spacing","item","xs","CardActions","Button","onClick","push","useParams","StepSeries","height","appendPadding","scale","month","range","autoFit","crosshairs","type","position","shape","LineSeries","point","area","earnings","symbols","reportedEPS","setReportedEPS","setType","stocks","split","earningsArray","annualEarnings","concat","er","fiscalDateEnding","Number","justify","direction","ButtonGroup","aria-label","Select","labelId","MenuItem","App","setStocks","favorites","setFavorites","localStorage","setItem","stringify","stored","getItem","Chart","Compare","takeRight","reverse","s","Stock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","props","state","hasError","this","children","Component","ReactDOM","render","StrictMode","className","Helmet","charSet","document","getElementById"],"mappings":"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","file":"static/js/main.e1f64b96.chunk.js","sourcesContent":["export class ResponseError extends Error {\n  response: any;\n}\n\nexport function queryString(data: any) {\n  return Object.keys(data)\n    .filter(key => data[key] !== null && data[key] !== undefined)\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&');\n}\nfunction checkStatus(response: any) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new ResponseError(response.statusText);\n  error.message = 'HTTP Status 500 â€“ Internal Server Error';\n  throw error;\n}\n\n/**\n * @param url request url\n * @param data form data as object literal\n */\nexport async function postForm(url: string, data: any) {\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n  return request(url, {\n    method: 'POST',\n    body: queryString(data),\n    headers: headers,\n  });\n}\n\n/**\n *\n * @param url request url\n * @param data request data as object literal\n */\nexport function post(url: string, data: any) {\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json; charset=UTF-8');\n  return request(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: headers,\n  });\n}\n\n\n/**\n *\n * @param url request url\n * @param data request data as object literal\n */\nexport function get(url: string, data: any) {\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json; charset=UTF-8');\n  const path = `${url}?${queryString(data)}`;\n  console.log(path);\n  return request(path, {\n    method: 'GET',\n    headers: headers,\n  });\n}\n\nexport default async function request(url: string, options?: any) {\n  const response = await fetch(url, options);\n\n  var text = null;\n\n  checkStatus(response);\n\n  try {\n    text = await response.text();\n    const data = JSON.parse(text);\n    return { data };\n  } catch (error) {\n    console.log(error);\n    return { data: text };\n  }\n}\n","import { get } from './request';\n\n\nexport const STOCK_QUERY_URL = \"https://www.alphavantage.co/query\"\n\nconst API_KEY = \"ZGN5MW8SCFQZBPBN\";\n\nexport default {\n  searchSymbol(symbol: string): Promise<{data: {bestMatches: any[]}}> {\n    return get(STOCK_QUERY_URL, {\n      function: \"SYMBOL_SEARCH\",\n      keywords: symbol,\n      apikey: API_KEY\n    })\n  },\n\n  overview(symbol: string) {\n    return get(STOCK_QUERY_URL, {\n      function: \"OVERVIEW\",\n      symbol: symbol,\n      apikey: API_KEY\n    })\n  },\n\n  globalQuote(symbol: string) {\n    return get(STOCK_QUERY_URL, {\n      function: \"GLOBAL_QUOTE\",\n      symbol: symbol,\n      apikey: API_KEY\n    })\n  },\n\n  earnings(symbol: string) {\n    return get(STOCK_QUERY_URL, {\n      function: \"EARNINGS\",\n      symbol: symbol,\n      apikey: API_KEY\n    })\n  },\n\n  daily(symbol: string) {\n    return get(STOCK_QUERY_URL, {\n      function: \"TIME_SERIES_DAILY\",\n      symbol: symbol,\n      apikey: API_KEY\n    })\n  },\n}\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isEmptyOrSpaces } from '../utils/stringUtils';\nimport StockService from '../services/stock';\nimport { throttle } from 'lodash';\n\nconst { searchSymbol } = StockService;\n\nexport default function SearchStock({onChange}: {\n  onChange: (v: any[]) => void\n}) {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [options, setOptions] = React.useState<any[]>([]);\n  const [searchValue, setSearchValue] = React.useState<string>('');\n  const loading = open && options.length == 0;\n    const throttled = throttle(async (active) => {\n    const {\n      data: {\n        bestMatches,\n      },\n    } = await searchSymbol(searchValue);\n\n    if (active && bestMatches) {\n      setOptions(bestMatches);\n    }\n\n  }, 1000*30);\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (isEmptyOrSpaces(searchValue) || !open || searchValue.length < 2) {\n      return undefined;\n    }\n\n\n    throttled(active);\n\n    return () => {\n      active = false;\n    };\n  }, [searchValue]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      multiple\n      id=\"stock-search-input\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onChange={(e, v) => onChange(v)}\n      getOptionSelected={(option, value) => option[\"1. symbol\"] === value[\"1. symbol\"]}\n      getOptionLabel={(option) => option[\"1. symbol\"]}\n      options={options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          onChange={e => setSearchValue(e.target.value)}\n          value={searchValue}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}","export function isEmptyOrSpaces(str: string) {\n  return str.match(/^ *$/) !== null;\n}","import React, {useEffect, useState} from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TrendingDown from '@material-ui/icons/TrendingDown';\nimport TrendingUp from '@material-ui/icons/TrendingUp';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\n\nimport StockService from '../services/stock';\nconst { daily } = StockService;\nexport default function({stock}: {stock:{symbol: string, name: string}}) {\n  const history = useHistory();\n  const [last, setLast] = useState<any>({});\n  useEffect(() => {\n    (async function getDaily() {\n      const {data: {\n        \"Meta Data\": meta,\n        \"Time Series (Daily)\": timeSeriesDaily\n      }} = await daily(stock.symbol);\n      if(meta) setLast(timeSeriesDaily[meta[\"3. Last Refreshed\"]])\n    })()\n  }, [stock])\n  return (\n    <Card>\n      <CardHeader title={stock.symbol} subheader={stock.name} />\n      <CardContent>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            Open\n          </Grid>\n          <Grid item xs={6}>\n            {last[\"1. open\"]}\n          </Grid>\n          <Grid item xs={6}>\n            High\n          </Grid>\n          <Grid item xs={6}>\n            {last[\"2. high\"]}\n          </Grid>\n          <Grid item xs={6}>\n            Low\n          </Grid>\n          <Grid item xs={6}>\n            {last[\"3. low\"]}\n          </Grid>\n          <Grid item xs={6}>\n            Close\n          </Grid>\n          <Grid item xs={6}>\n            {last[\"4. close\"]}\n          </Grid>\n          <Grid item xs={6}>\n            Volume\n          </Grid>\n          <Grid item xs={6}>\n            {last[\"5. volume\"]}\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={e => history.push(`/detail/${stock.symbol}`)}>\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}","import React from 'react'\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nexport default function() {\n  const history = useHistory();\n  const { symbol } = useParams<any>();\n\n  return (\n    <div>\n      <p><Button variant=\"contained\" onClick={e => history.push(\"/\")}>Home</Button></p>\n      <h1>{symbol}</h1>\n    </div>\n  )\n}","import React from \"react\";\nimport {\n\tG2,\n\tChart,\n\tGeom,\n\tAxis,\n\tTooltip,\n\tCoord,\n\tLabel,\n\tLegend,\n\tView,\n\tGuide,\n\tFacet,\n\tUtil\n} from \"bizcharts\";\n\nexport default function StepSeries({data}: {data: any[]}) {\n  const cols = {\n    month: {\n      range: [0, 1]\n    }\n  };\n  return (\n    <Chart height={400} appendPadding={[10,0,0,0]} data={data} scale={cols} autoFit>\n      <Legend />\n      <Axis name=\"month\" />\n      <Axis name=\"value\" />\n      <Tooltip\n        crosshairs={{\n          type: \"y\"\n        }}\n      />\n      <Geom\n        type=\"line\"\n        position=\"month*value\"\n        size={2}\n        color={\"key\"}\n        shape={\"hv\"}\n      />\n    </Chart>\n  );\n}","import React from \"react\";\nimport {\n\tG2,\n\tChart,\n\tGeom,\n\tAxis,\n\tTooltip,\n\tCoord,\n\tLabel,\n\tLegend,\n\tLineAdvance\n} from \"bizcharts\";\n\nexport default function LineSeries({data}: {data: any[]}) {\n  const cols = {\n    month: {\n      range: [0, 1]\n    }\n  };\n  return (\n    <Chart height={400} appendPadding={[10,0,0,0]} data={data} scale={cols} autoFit>\n      <Legend />\n      <Axis name=\"month\" />\n      <Axis name=\"value\" />\n      <Tooltip\n        crosshairs={{\n          type: \"y\"\n        }}\n      />\n      <LineAdvance\n        shape=\"smooth\"\n        point\n        area\n        position=\"month*value\"\n        color=\"key\"\n      />\n    </Chart>\n  );\n}","import React, {useEffect, useState} from 'react'\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport StockService from '../services/stock';\nimport StepSeries from './StepSeries';\nimport LineSeries from './LineSeries';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst { earnings } = StockService;\n\nexport default function() {\n  const history = useHistory();\n  const { symbols } = useParams<{symbols:string}>();\n  const [reportedEPS, setReportedEPS] = useState<any[]>([]);\n  const [type, setType] = useState<any>('LineAdvance');\n  useEffect(() => {\n    (async function() {\n      const stocks = symbols.split(\",\");\n      if(stocks.length>0) {\n        let earningsArray: any[] = [];\n        for(const stock of stocks) {\n          const {data: {\n            annualEarnings,\n            symbol\n          }} = await earnings(stock);\n          earningsArray = earningsArray.concat(annualEarnings.map((er: {fiscalDateEnding: any; reportedEPS: any;}) => (\n            {\n              key: symbol,\n              month: er.fiscalDateEnding,\n              value: Number(er.reportedEPS)\n            }\n          )));\n        }\n        setReportedEPS(earningsArray);\n      }\n    })();\n  }, [symbols]);\n  return (\n    <div>\n      <p><Button variant=\"contained\" onClick={e => history.push(\"/\")}>Home</Button></p>\n\n      <Grid container justify=\"space-between\" direction=\"row\">\n        <Grid item>\n          <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\n            {symbols.split(\",\").map(stock => (\n              <Button key={stock}>\n                {stock}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={type}\n            onChange={e => setType(e.target.value)}\n          >\n            <MenuItem value={'Geom'}>Geom</MenuItem>\n            <MenuItem value={'LineAdvance'}>LineAdvance</MenuItem>\n          </Select>\n        </Grid>\n      </Grid>\n\n      {\n        type == 'Geom' && (<StepSeries data={reportedEPS}/>)\n      }\n      {\n        type == 'LineAdvance' && (<LineSeries data={reportedEPS} />)\n      }\n    </div>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport { takeRight } from 'lodash';\nimport { normalize } from './utils/normalize';\nimport Stock from \"./components/Stock\";\nimport ErrorBoundary from './ErrorBoundary';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Chart from './components/Chart';\nimport Compare from './components/Compare'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\n\nfunction App() {\n  const history = useHistory();\n  const [stocks, setStocks] = useState<any[]>([]);\n\n  const [favorites, setFavorites] = useState<any[]>([]);\n\n  useEffect(() => {\n    if(stocks && stocks.length > 0) localStorage.setItem(\"STOCKS\", JSON.stringify(stocks))\n  }, [stocks]);\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"STOCKS\");\n    if(stored) setFavorites(JSON.parse(stored));\n  }, []);\n\n\n  return (\n    <Switch>\n      <Route path=\"/detail/:symbol\">\n        <Chart />\n      </Route>\n      <Route path=\"/compare/:symbols\">\n        <Compare />\n      </Route>\n      <Route path=\"/\">\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <h1>Enter stock symbol to search</h1>\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Grid item><Search onChange={stocks => setStocks(takeRight(stocks, 3).reverse().map(s => normalize(s)))}/></Grid>\n              <Grid item><Button variant=\"contained\" onClick={e => history.push(`/compare/${favorites.map(s => s.symbol)}`)}>Compare</Button></Grid>\n            </Grid>\n            {\n              stocks.map(stock => <Stock stock={stock} key={stock.symbol} />)\n            }\n        </Grid>\n          <Grid item xs={6}>\n            <h1>My Favorites</h1>\n            {\n              favorites.map(stock => <Stock stock={stock} key={stock.symbol} />)\n            }\n\n          </Grid>\n        </Grid>\n      </Route>\n    </Switch>\n\n  );\n}\n\nexport default App;\n","export function normalize(stock: any): {symbol: string, name: string} {\n  return {\n    symbol: stock[\"1. symbol\"],\n    name: stock[\"2. name\"]\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nexport default class ErrorBoundary extends React.Component<any, {hasError: boolean}> {\n  constructor(props: any) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch() {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorBoundary from './ErrorBoundary';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport {Helmet} from \"react-helmet\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ErrorBoundary className=\"App\">\n        <Router>\n          <App />\n        </Router>\n\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>Stock Quote</title>\n        </Helmet>\n      </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}